{"version":3,"sources":["components/SwrNavBar.js","components/SwrHeader.js","components/SwrSliders.js","components/SwrDescription.js","components/SwrPlotSpend.js","components/SwrPlotPortval.js","components/SwrPlotProfile.js","components/SwrPlotSurvival.js","components/SwrPlots.js","components/SwrFooter.js","js/real_return_df.js","js/spend_df.js","js/portval_df.js","js/profile_df.js","js/survival_df.js","components/SwrMain.js","App.js","reportWebVitals.js","index.js"],"names":["SwrNavBar","props","useState","isOpen","setIsOpen","Navbar","className","expand","NavbarToggler","onClick","NavbarBrand","href","Collapse","navbar","Nav","NavItem","NavLink","icon","faAddressCard","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","faRocket","DropdownMenu","right","DropdownItem","faFolderOpen","SwrHeader","Fragment","Component","SwrSliders","onStocksChange","value","mainObj","setState","stock_alloc_pct","bond_alloc_pct","risk_label","do_recalc","onBondsChange","onFixedChange","withdrawal_fixed_pct","onVariableChange","withdrawal_variable_pct","onFloorChange","withdrawal_floor_pct","onRiskChange","risk_index","bengen1","bind","ce1","ce2","this","Form","onSubmit","handleSubmit","classID","FormGroup","row","Label","data-testid","htmlFor","md","state","Col","min","max","step","onChange","onAfterChange","Button","outline","color","id","SwrDescription","start_spend","mean_spend","worst_spend","pct_exhausted","SwrPlotSpend","val","low","high","palette","fraction","Math","round","length","df","spend_df","n_cohorts","data","plotly_data","lastvals","i","spend","push","last_low","apply","last_high","line_options","highlight_index","getcolor","x","columns","y","hovertemplate","name","index","type","mode","line","divId","layout","width","height","showlegend","title","hovermode","yaxis","linecolor","mirror","ticks","range","xaxis","margin","t","r","l","b","pad","autocolorscale","colorscale","arg","points","curveNumber","portval_df","SwrPlotProfile","profile_df","rangemode","SwrPlotSurvival","survival_df","SwrPlots","SwrPlotPortval","SwrFooter","style","target","rel","faRssSquare","faTwitterSquare","faGithubSquare","faLinkedin","REAL_RETURN_DF","SPEND_DF","PORTVAL_DF","PROFILE_DF","SURVIVAL_DF","SwrMain","n_ret_years","highlighted_index","real_return_df","handleStockChange","handleBondChange","handleFixedChange","handleVariableChange","handleFloorChange","calc_profile_df","recalc_cohort_data","ReactGA","pageview","window","location","pathname","search","array","reduce","a","portvals","spendvals","withdrawal_variable","portval","desired_spend","desired_spend2","spendval","new_df","Object","assign","stocks","bonds","stock_alloc","bond_alloc","spendvaldata","portvaldata","new_survival_df","mean_spendvals","min_spendvals","n_exhausted","cohort_start","exhausted","cohort_year","current_year","listmean","new_spend_df","new_portval_df","toFixed","event","preventDefault","targetval","parseFloat","isNaN","initialize","testMode","process","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,UACzU,KAAO,CACP,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACrH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,KClExGC,EAAa,CAAC,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtH,MAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,UACzU,KAAO,CAAC,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjI,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACzH,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,KCjE5GC,EAAat2BC,EAAc,CACvB,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAC3F,MAAQ,CAAC,iBAAiB,iBAC1B,KAAO,CACH,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAC7D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,M,QCgB5EC,EAAb,kDACI,WAAY9J,GAAQ,IAAD,8BACf,cAAMA,IACDgE,MAAQ,CACT5B,gBAAiB,GACjBC,eAAgB,GAChBK,qBAAsB,EACtBE,wBAAyB,IACzBE,qBAAsB,EACtB8B,YAAa,IACbmF,YAAa,GACblF,WAAY,IACZC,YAAa,IACbC,cAAe,IACfiF,mBAAoB,EACpBC,eAAgBR,EAChB/D,SAAUgE,EACVjB,WAAYkB,EACZhB,WAAYiB,EACZd,YAAae,EACb7G,YAAa,EACbV,WAAY,UAGhB,EAAK4H,kBAAoB,EAAKA,kBAAkBhH,KAAvB,gBACzB,EAAKiH,iBAAmB,EAAKA,iBAAiBjH,KAAtB,gBACxB,EAAKkH,kBAAoB,EAAKA,kBAAkBlH,KAAvB,gBACzB,EAAKmH,qBAAuB,EAAKA,qBAAqBnH,KAA1B,gBAC5B,EAAKoH,kBAAoB,EAAKA,kBAAkBpH,KAAvB,gBACzB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKqH,gBAAkB,EAAKA,gBAAgBrH,KAArB,gBACvB,EAAKsH,mBAAqB,EAAKA,mBAAmBtH,KAAxB,gBA9BX,EADvB,qDAmCI,WACIuH,IAAQC,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAC5DzH,KAAKd,cArCb,sBAyCI,SAASwI,GACL,OAAOA,EAAMC,QAAO,SAACC,EAAG/C,GAAJ,OAAU+C,EAAI/C,KAAK6C,EAAMvF,SA1CrD,6BA6CI,WAII,IAHA,IAAI0F,EAAW,GACXC,EAAY,GACZC,EAAsB/H,KAAKW,MAAMpB,wBAA0B,IACtDmD,EAAE,EAAGA,GAAG,IAAMA,IAAK,CACxB,IAAIsF,EAAUtF,EAAE,GACZuF,EAAgBjI,KAAKW,MAAMtB,qBAAwB2I,EAAUD,EAC7DG,EAAiBjG,KAAKnB,IAAImH,EAAejI,KAAKW,MAAMlB,sBACpD0I,EAAWlG,KAAKpB,IAAImH,EAASE,GACjCL,EAASjF,KAAKoF,GACdF,EAAUlF,KAAKuF,GAGnB,IAAIC,EAASC,OAAOC,OAAOtI,KAAKW,MAAM2E,YACtC8C,EAAO7F,KAAO,CAACsF,EAAUC,GACzB9H,KAAKlB,SAAS,CAACwG,WAAY8C,MA5DnC,gCA+DI,WAwBI,IAvBA,IAAIG,EAASvI,KAAKW,MAAMiG,eAAerE,KAAK,GACxCiG,EAAQxI,KAAKW,MAAMiG,eAAerE,KAAK,GACvCkG,EAAczI,KAAKW,MAAM5B,gBAAkB,IAC3C2J,EAAa1I,KAAKW,MAAM3B,eAAiB,IACzC+I,EAAsB/H,KAAKW,MAAMpB,wBAA0B,IAC3DmH,EAAc1G,KAAKW,MAAM+F,YACzBpE,EAAYiG,EAAOpG,OAASuE,EAAc,EAC1CiC,EAAe,GACfC,EAAc,GAEdC,EAAkB,CAClB,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACxF,MAAQ,CAAC,iBAAiB,iBAC1B,KAAO,CACH,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC7D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAIrFC,EAAiB,GACjBC,EAAgB,GAChBC,EAAc,EAETC,EAAa,EAAGA,EAAa3G,EAAW2G,IAAgB,CAC7D,IAAIjB,EAAU,IACVH,EAAW,GACXC,EAAY,GAEhBD,EAASjF,KAAKoF,GAMd,IALA,IAAIkB,GAAY,EAKPC,EAAY,EAAGA,EAAYzC,EAAayC,IAAe,CAC5D,IAAIC,EAAeH,EAAeE,EAGlCnB,GAAa,GADKS,EAAcF,EAAOa,GAAgBV,EAAaF,EAAMY,IAG1E,IAAInB,EAAgBjI,KAAKW,MAAMtB,qBAAuB2I,EAAUD,EAChEE,EAAgBhG,KAAKnB,IAAImH,EAAejI,KAAKW,MAAMlB,sBACnD,IAAI0I,EAAWlG,KAAKpB,IAAImH,EAASC,GAGjCH,EAAUlF,KAAKuF,GACfH,GAAWG,EACXN,EAASjF,KAAKoF,GAIE,IAAZA,IACKkB,IACDA,GAAY,EACZF,IACAH,EAAgBtG,KAAK,GAAG4G,OAIpCR,EAAa/F,KAAKkF,GAClBgB,EAAelG,KAAK5C,KAAKqJ,SAASvB,IAClCiB,EAAcnG,KAAKX,KAAKpB,IAAIiC,MAAMb,KAAM6F,IAExCc,EAAYhG,KAAKiF,GACZqB,GACDL,EAAgBtG,KAAK,GAAGmE,KAIhC,IAAI4C,EAAejB,OAAOC,OAAOtI,KAAKW,MAAM0B,UAC5CiH,EAAa/G,KAAOoG,EAEpB,IAAIY,EAAiBlB,OAAOC,OAAOtI,KAAKW,MAAMyE,YAC9CmE,EAAehH,KAAOqG,EAEtB,IAAIpH,EAAaxB,KAAKqJ,SAASP,GAAgBU,QAAQ,GACnD/H,EAAcQ,KAAKpB,IAAIiC,MAAMb,KAAM8G,GAAeS,QAAQ,GAC1D9H,GAAiBsH,EAAc1G,EAAY,KAAKkH,QAAQ,GACxDjI,EAAcU,KAAKnB,IAAId,KAAKW,MAAMtB,qBAAuBW,KAAKW,MAAMpB,wBAAyBS,KAAKW,MAAMlB,sBAAsB+J,QAAQ,GAE1IxJ,KAAKlB,SAAS,CACVuD,SAAUiH,EACVlE,WAAYmE,EACZ9D,YAAaoD,EACbtH,YAAaA,EACbC,WAAYA,EACZC,YAAaA,EACbC,cAAeA,MAvJ3B,uBA4JI,WACI1B,KAAKkH,kBACLlH,KAAKmH,uBA9Jb,0BAiKI,SAAasC,GACTA,EAAMC,iBACN1J,KAAKd,cAnKb,+BAuKI,SAAkBuK,GACd,IAAIE,EAAYC,WAAWH,EAAM3D,OAAOlH,OACxC+K,EAAYE,MAAMF,GAAa,EAAIA,EACnC3J,KAAKlB,SAAS,CAACC,gBAAiB4K,GAAY3J,KAAKd,aA1KzD,8BA6KI,SAAiBuK,GACb,IAAIE,EAAYC,WAAWH,EAAM3D,OAAOlH,OACxC+K,EAAYE,MAAMF,GAAa,EAAIA,EACnC3J,KAAKlB,SAAS,CAACE,eAAgB2K,GAAY3J,KAAKd,aAhLxD,+BAmLI,SAAkBuK,GACd,IAAIE,EAAYC,WAAWH,EAAM3D,OAAOlH,OACxC+K,EAAYE,MAAMF,GAAa,EAAIA,EACnC3J,KAAKlB,SAAS,CAACO,qBAAsBsK,GAAY3J,KAAKd,aAtL9D,kCAyLI,SAAqBuK,GACjB,IAAIE,EAAYC,WAAWH,EAAM3D,OAAOlH,OACxC+K,EAAYE,MAAMF,GAAa,EAAIA,EACnC3J,KAAKlB,SAAS,CAACS,wBAAyBoK,GAAY3J,KAAKd,aA5LjE,+BA+LI,SAAkBuK,GACd,IAAIE,EAAYC,WAAWH,EAAM3D,OAAOlH,OACxC+K,EAAYE,MAAMF,GAAa,EAAIA,EACnC3J,KAAKlB,SAAS,CAACW,qBAAsBkK,GAAY3J,KAAKd,aAlM9D,oBAqMI,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAYL,QAASmB,OACrB,cAAC,EAAD,eAAoBA,KAAKW,QACzB,cAAC,EAAD,CAAU9B,QAASmB,OACnB,cAAC,EAAD,WA5MhB,GAA6BvB,aCd7B2I,IAAQ0C,WADW,eACY,CAAEC,UAAUC,I,IAe5BC,G,4JAVb,WACE,OAEE,qBAAKjN,UAAU,MAAf,SACE,cAAC,EAAD,U,GANUyB,aCEHyL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.54fbaa62.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressCard, faRocket, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport '../css/SwrNavBar.css';\n\nconst SwrNavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar className=\"navbar-custom\" expand=\"md\">\n      <div className=\"container\">\n        <NavbarToggler onClick={toggle} />\n        <NavbarBrand className=\"navbar-brand-custom\" href=\"https://druce.ai/\">Druce.ai</NavbarBrand>\n        <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto navbar-custom\" navbar>\n                <NavItem className=\"navbar-custom\">\n                    <NavLink href=\"https://druce.ai/contact.html\"><FontAwesomeIcon icon={faAddressCard} /> About</NavLink>\n                </NavItem>\n                <UncontrolledDropdown className=\"navbar-custom\" nav inNavbar>\n                    <DropdownToggle nav caret>\n                        <FontAwesomeIcon icon={faRocket} /> Projects\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem href=\"http://www.streeteye.com/static/Pizza/\">\n                        Pizza Pizza Pizza\n                        </DropdownItem>\n                        <DropdownItem href=\"http://www.streeteye.com/static/swr\">\n                        Safe Withdrawal Retirement Calculator\n                        </DropdownItem>\n                        <DropdownItem href=\"http://www.streeteye.com/namegenerator/\">\n                        Hedge Fund Name Generator\n                        </DropdownItem>\n                        <DropdownItem href=\"http://www.streeteye.com/static/fintwit201901/\">\n                        FinTwit Graph\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n                <NavItem className=\"navbar-custom\">\n                    <NavLink href=\"https://druce.ai/tags.html\"><FontAwesomeIcon icon={faFolderOpen} /> Archive</NavLink>\n                </NavItem>\n            </Nav>\n        </Collapse>\n        </div>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default SwrNavBar;","import React, { Component } from 'react';\nimport SwrNavBar from './SwrNavBar';\n\nclass SwrHeader extends Component {\n    render() {\n      return(\n      <React.Fragment>\n        <SwrNavBar />\n            <div className=\"container\">\n                 <div className=\"row row-header\">\n                     <div className=\"col-12 text-left\">\n                        <h1>Safe Withdrawal for Retirement Calculator</h1>\n                        <p>Show all historical paths for 30-year retirements 1928-1991 based on specified asset allocation and withdrawal parameters. Drag the sliders to adjust parameters:</p>\n                        <ul>\n                        <li>Asset allocation: A fixed stock/bond percentage throughout retirement.</li>\n                        <li>Withdrawals:\n                            <ul>\n                                <li>Each year, withdraw a fixed percentage (Fixed %) of the starting portfolio <span className=\"font-italic\">plus</span> a percentage of the current portfolio (Variable %), or…</li>\n                                <li>a floor percentage (Floor %) of the starting portfolio, whichever is greater</li>\n                            </ul>\n                            </li>\n                        </ul>\n                        <p>See this <a href=\"https://druce.ai/2021/02/optimal-safe-withdrawal-for-retirement-using-certainty-equivalent-spending-revisited\">blog post</a> for detailed discussion.</p>\n\t                    <p className=\"font-italic\">Disclaimer: This is not investment advice! For educational purposes only. Past performance may not be representative of future results. Consult a professional for investment and retirement advice.</p>\n                     </div>\n                 </div>\n             </div>\n      </React.Fragment>\n      );\n    }\n  }\n  \n  export default SwrHeader;","import React, { Component } from 'react';\nimport { Form, FormGroup, Col, Label, Button} from 'reactstrap';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport '../css/SwrSliders.css';\n\nclass SwrSliders extends Component {\n\n    constructor(props) {\n        super(props);\n        this.bengen1 = this.bengen1.bind(this);\n        this.ce1 = this.ce1.bind(this);\n        this.ce2 = this.ce2.bind(this);\n    }\n\n    // slider callbacks\n    onStocksChange = value => {\n        // console.log(value);\n        this.props.mainObj.setState({\n            stock_alloc_pct: value,\n            bond_alloc_pct: 100 - value,\n            risk_label: \"(None)\"\n        }, this.props.mainObj.do_recalc);\n    }\n\n    onBondsChange = value => {\n        // console.log(value);\n        this.props.mainObj.setState({\n            stock_alloc_pct: 100 - value,\n            bond_alloc_pct: value,\n            risk_label: \"(None)\"\n        }, this.props.mainObj.do_recalc);\n    }\n\n    onFixedChange = value => {\n        // console.log(value);\n        this.props.mainObj.setState({\n            withdrawal_fixed_pct: value,\n            risk_label: \"(None)\"\n        }, this.props.mainObj.do_recalc);\n    }\n\n    onVariableChange = value => {\n        // console.log(value);\n        this.props.mainObj.setState({\n            withdrawal_variable_pct: value,\n            risk_label: \"(None)\"\n        }, this.props.mainObj.do_recalc);\n    }\n\n    onFloorChange = value => {\n        // console.log(value);\n        this.props.mainObj.setState({\n            withdrawal_floor_pct: value,\n            risk_label: \"(None)\"\n        }, this.props.mainObj.do_recalc);\n    }\n\n    onRiskChange = value => {\n        switch (value)\n        {\n            case 0:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 50.0,\n                    bond_alloc_pct: 50.0,\n                    withdrawal_fixed_pct: 4.0,\n                    withdrawal_variable_pct: 0.0,\n                    withdrawal_floor_pct: 4.0,\n                    risk_index: 0,\n                    risk_label: 'Gamma: ∞'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 1:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 75.0,\n                    bond_alloc_pct: 25.0,\n                    withdrawal_fixed_pct: 3.5,\n                    withdrawal_variable_pct: 1.1,\n                    withdrawal_floor_pct: 3.8,\n                    risk_index: 1,\n                    risk_label: 'Gamma: 16'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 2:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 76.0,\n                    bond_alloc_pct: 24.0,\n                    withdrawal_fixed_pct: 3.4,\n                    withdrawal_variable_pct: 1.3,\n                    withdrawal_floor_pct: 3.7,\n                    risk_index: 2,\n                    risk_label: 'Gamma: 12'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 3:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 77.0,\n                    bond_alloc_pct: 23.0,\n                    withdrawal_fixed_pct: 3.3,\n                    withdrawal_variable_pct: 1.5,\n                    withdrawal_floor_pct: 3.7,\n                    risk_index: 3,\n                    risk_label: 'Gamma: 10'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 4:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 79.0,\n                    bond_alloc_pct: 21.0,\n                    withdrawal_fixed_pct: 3.2,\n                    withdrawal_variable_pct: 1.8,\n                    withdrawal_floor_pct: 3.4,\n                    risk_index: 4,\n                    risk_label: 'Gamma: 8'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 5:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 82.0,\n                    bond_alloc_pct: 18.0,\n                    withdrawal_fixed_pct: 3.0,\n                    withdrawal_variable_pct: 2.2,\n                    withdrawal_floor_pct: 3.4,\n                    risk_index: 5,\n                    risk_label: 'Gamma: 6'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 6:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 88.0,\n                    bond_alloc_pct: 12.0,\n                    withdrawal_fixed_pct: 2.6,\n                    withdrawal_variable_pct: 3.0,\n                    withdrawal_floor_pct: 3.4,\n                    risk_index: 6,\n                    risk_label: 'Gamma: 4'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 7:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 99.0,\n                    bond_alloc_pct: 1.0,\n                    withdrawal_fixed_pct: 0.7,\n                    withdrawal_variable_pct: 5.8,\n                    withdrawal_floor_pct: 3.4,\n                    risk_index: 7,\n                    risk_label: 'Gamma: 2'\n                }, this.props.mainObj.do_recalc);\n                break;\n            case 8:\n                this.props.mainObj.setState({\n                    stock_alloc_pct: 100.0,\n                    bond_alloc_pct: 0.0,\n                    withdrawal_fixed_pct: 0.0,\n                    withdrawal_variable_pct: 6.7,\n                    withdrawal_floor_pct: 3.4,\n                    risk_index: 8,\n                    risk_label: 'Gamma: 1'\n                }, this.props.mainObj.do_recalc);\n                break;\n           default: \n                break;\n        }\n    }\n\n    // quick button callbacks\n    bengen1() {\n        this.props.mainObj.setState({\n            stock_alloc_pct: 50.0,\n            bond_alloc_pct: 50.0,\n            withdrawal_fixed_pct: 4.0,\n            withdrawal_variable_pct: 0.0,\n            withdrawal_floor_pct: 4.0,\n            risk_index: 0,\n            risk_label: 'Gamma: ∞'\n        }, this.props.mainObj.do_recalc);\n    }\n\n    ce1() {\n        this.props.mainObj.setState({\n            stock_alloc_pct: 75.0,\n            bond_alloc_pct: 25.0,\n            withdrawal_fixed_pct: 3.5,\n            withdrawal_variable_pct: 1.1,\n            withdrawal_floor_pct: 3.8,\n            risk_index: 1,\n            risk_label: 'Gamma: 16'\n        }, this.props.mainObj.do_recalc);\n    }\n\n    ce2() {\n        this.props.mainObj.setState({\n            stock_alloc_pct: 88.0,\n            bond_alloc_pct: 12.0,\n            withdrawal_fixed_pct: 2.6,\n            withdrawal_variable_pct: 3.0,\n            withdrawal_floor_pct: 3.4,\n            risk_index: 6,\n            risk_label: 'Gamma: 4'\n        }, this.props.mainObj.do_recalc);\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n            <div className=\"row \">\n    \n            <div className=\"col-12 col-md-9\">\n                <div className=\"col-12 col-md-8\">\n                    <h3 className=\"text-left\">Asset Allocation:</h3>\n                </div>\n                <Form onSubmit={this.props.mainObj.handleSubmit} classID=\"sliderForm\">\n                <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"stock_alloc_pct_label\" htmlFor=\"stock_alloc_pct\" md={3} className=\"text-right\">Stocks %: {this.props.mainObj.state.stock_alloc_pct}</Label>\n                            <Col md={9}>\n                                <Slider \n                                    value={this.props.mainObj.state.stock_alloc_pct}\n                                    min={0} \n                                    max={100} \n                                    step={1}\n                                    onChange={this.onStocksChange}\n                                    onAfterChange={this.onStocksChange}\n                                />\n                            </Col>\n                    </FormGroup>\n                    <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"bond_alloc_pct_label\" htmlFor=\"bond_alloc_pct\" md={3} className=\"text-right\">Bonds %: {this.props.mainObj.state.bond_alloc_pct}</Label>\n                            <Col md={9}>\n                                <Slider \n                                    value={this.props.mainObj.state.bond_alloc_pct}\n                                    min={0} \n                                    max={100} \n                                    step={1}\n                                    onChange={this.onBondsChange}\n                                    onAfterChange={this.onBondsChange}\n                                />\n                            </Col>\n                    </FormGroup>\n                    \n                    <div className=\"col-12 col-md-9\">\n                        <h3 className=\"text-left\">Annual Withdrawals:</h3>\n                    </div>\n\n                    <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"withdrawal_fixed_label\" htmlFor=\"withdrawal_fixed\" md={3} className=\"text-right\">Fixed %: {this.props.mainObj.state.withdrawal_fixed_pct}</Label>\n                            <Col md={9}>\n                                <Slider \n                                    value={this.props.mainObj.state.withdrawal_fixed_pct}\n                                    min={-2} \n                                    max={6} \n                                    step={0.1}\n                                    onChange={this.onFixedChange}\n                                    onAfterChange={this.onFixedChange}\n                                />\n                            </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"withdrawal_variable_label\" htmlFor=\"withdrawal_variable\" md={3} className=\"text-right\">Variable %: {this.props.mainObj.state.withdrawal_variable_pct}</Label>\n                            <Col md={9}>\n                                <Slider \n                                    value={this.props.mainObj.state.withdrawal_variable_pct}\n                                    min={0} \n                                    max={10} \n                                    step={0.1}\n                                    onChange={this.onVariableChange}\n                                    onAfterChange={this.onVariableChange}\n                                />\n                            </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"withdrawal_floor_label\" htmlFor=\"withdrawal_floor\" md={3} className=\"text-right\">Floor %: {this.props.mainObj.state.withdrawal_floor_pct}</Label>\n                            <Col md={9}>\n                                <Slider \n                                    value={this.props.mainObj.state.withdrawal_floor_pct}\n                                    min={0} \n                                    max={6} \n                                    step={0.1}\n                                    onChange={this.onFloorChange}\n                                    onAfterChange={this.onFloorChange}\n                                />\n                            </Col>\n                    </FormGroup>\n\n\n                    <div className=\"col-12 col-md-9\">\n                        <h3 className=\"text-left\">Risk Presets:</h3>\n                    </div>\n\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-12\">\n                                    <Button data-testid=\"button1\" outline color=\"secondary\" onClick={this.bengen1}>Bengen 4% rule</Button>\n                                    &nbsp;\n                                    <Button data-testid=\"button3\" outline color=\"secondary\" onClick={this.ce1}>Low risk rule (gamma=16)</Button>\n                                    &nbsp;\n                                    <Button  data-testid=\"button4\" outline color=\"secondary\" onClick={this.ce2}>High risk rule (gamma=4)</Button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <FormGroup row className=\"align-items-center\">\n                            <Label data-testid=\"risk_presets_label\" htmlFor=\"risk_presets\" md={3} className=\"text-right\">{this.props.mainObj.state.risk_label}</Label>\n                            <Col md={9}>\n                                <Slider\n                                    id=\"risk_presets\"\n                                    value={this.props.mainObj.state.risk_index}\n                                    min={0} \n                                    max={8} \n                                    step={1}\n                                    onChange={this.onRiskChange}\n                                    onAfterChange={this.onRiskChange}\n                                />\n                            </Col>\n                    </FormGroup>\n\n                    <div className=\"col-12 col-md-9\">\n                        &nbsp; <br />\n                        <h3 className=\"text-left\">Historical Outcomes:</h3>\n                    </div>\n\n\n                </Form>\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default SwrSliders;","import '../css/SwrDescription.css';\n\nconst SwrDescription = (props) => {\n    return (        \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"description text-left\" >\n                    <span className=\"font-weight-bold\">Strategy:</span> Allocate {props.stock_alloc_pct}/{props.bond_alloc_pct} stocks/bonds, each year spend {props.withdrawal_fixed_pct}% of starting portfolio +  {props.withdrawal_variable_pct}% of current portfolio, with a floor of {props.withdrawal_floor_pct}% of starting portfolio.<br />\n                    <span className=\"font-weight-bold\">Outcome:</span> Initial spending <span data-testid=\"start_spend\">{props.start_spend}</span>%, mean spending <span data-testid=\"mean_spend\">{props.mean_spend}</span>% of starting portfolio, worst case <span data-testid=\"worst_spend\">{props.worst_spend}</span>%, <span data-testid=\"pct_exhausted\">{props.pct_exhausted}</span>% of retirement cohorts exhausted after 30 years.\n                    <br /> &nbsp; \n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n\nexport default SwrDescription;","// import { data } from 'jquery';\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n// import Plotly from 'plotly.js/dist/plotly'\n\nclass SwrPlotSpend extends Component {\n\n  getcolor(val, low, high) {\n    let palette = ['#b40426', '#b50927', '#b70d28', '#b8122a', '#ba162b', '#bb1b2c', '#bd1f2d', '#be242e', '#c0282f', '#c12b30', '#c32e31', '#c43032', '#c53334', '#c73635', '#c83836', '#ca3b37', '#cb3e38', '#cc403a', '#cd423b', '#cf453c', '#d0473d', '#d1493f', '#d24b40', '#d44e41', '#d55042', '#d65244', '#d75445', '#d85646', '#d95847', '#da5a49', '#dc5d4a', '#dd5f4b', '#de614d', '#df634e', '#e0654f', '#e16751', '#e26952', '#e36b54', '#e36c55', '#e46e56', '#e57058', '#e67259', '#e7745b', '#e8765c', '#e9785d', '#e97a5f', '#ea7b60', '#eb7d62', '#ec7f63', '#ec8165', '#ed8366', '#ee8468', '#ee8669', '#ef886b', '#f08a6c', '#f08b6e', '#f18d6f', '#f18f71', '#f29072', '#f29274', '#f39475', '#f39577', '#f39778', '#f4987a', '#f49a7b', '#f59c7d', '#f59d7e', '#f59f80', '#f5a081', '#f6a283', '#f6a385', '#f6a586', '#f7a688', '#f7a889', '#f7a98b', '#f7aa8c', '#f7ac8e', '#f7ad90', '#f7af91', '#f7b093', '#f7b194', '#f7b396', '#f7b497', '#f7b599', '#f7b79b', '#f7b89c', '#f7b99e', '#f7ba9f', '#f7bca1', '#f6bda2', '#f6bea4', '#f6bfa6', '#f5c0a7', '#f5c1a9', '#f5c2aa', '#f5c4ac', '#f4c5ad', '#f4c6af', '#f3c7b1', '#f3c8b2', '#f2c9b4', '#f2cab5', '#f2cbb7', '#f1ccb8', '#f1cdba', '#f0cdbb', '#efcebd', '#efcfbf', '#eed0c0', '#edd1c2', '#edd2c3', '#ecd3c5', '#ebd3c6', '#ead4c8', '#ead5c9', '#e9d5cb', '#e8d6cc', '#e7d7ce', '#e6d7cf', '#e5d8d1', '#e4d9d2', '#e3d9d3', '#e2dad5', '#e1dad6', '#e0dbd8', '#dfdbd9', '#dedcdb', '#dddcdc', '#dcdddd', '#dbdcde', '#dadce0', '#d9dce1', '#d8dce2', '#d7dce3', '#d6dce4', '#d5dbe5', '#d4dbe6', '#d3dbe7', '#d2dbe8', '#d1dae9', '#cfdaea', '#cedaeb', '#cdd9ec', '#ccd9ed', '#cbd8ee', '#cad8ef', '#c9d7f0', '#c7d7f0', '#c6d6f1', '#c5d6f2', '#c4d5f3', '#c3d5f4', '#c1d4f4', '#c0d4f5', '#bfd3f6', '#bed2f6', '#bcd2f7', '#bbd1f8', '#bad0f8', '#b9d0f9', '#b7cff9', '#b6cefa', '#b5cdfa', '#b3cdfb', '#b2ccfb', '#b1cbfc', '#afcafc', '#aec9fc', '#adc9fd', '#abc8fd', '#aac7fd', '#a9c6fd', '#a7c5fe', '#a6c4fe', '#a5c3fe', '#a3c2fe', '#a2c1ff', '#a1c0ff', '#9fbfff', '#9ebeff', '#9dbdff', '#9bbcff', '#9abbff', '#98b9ff', '#97b8ff', '#96b7ff', '#94b6ff', '#93b5fe', '#92b4fe', '#90b2fe', '#8fb1fe', '#8db0fe', '#8caffe', '#8badfd', '#89acfd', '#88abfd', '#86a9fc', '#85a8fc', '#84a7fc', '#82a6fb', '#81a4fb', '#80a3fa', '#7ea1fa', '#7da0f9', '#7b9ff9', '#7a9df8', '#799cf8', '#779af7', '#7699f6', '#7597f6', '#7396f5', '#7295f4', '#7093f3', '#6f92f3', '#6e90f2', '#6c8ff1', '#6b8df0', '#6a8bef', '#688aef', '#6788ee', '#6687ed', '#6485ec', '#6384eb', '#6282ea', '#6180e9', '#5f7fe8', '#5e7de7', '#5d7ce6', '#5b7ae5', '#5a78e4', '#5977e3', '#5875e1', '#5673e0', '#5572df', '#5470de', '#536edd', '#516ddb', '#506bda', '#4f69d9', '#4e68d8', '#4c66d6', '#4b64d5', '#4a63d3', '#4961d2', '#485fd1', '#465ecf', '#455cce', '#445acc', '#4358cb', '#4257c9', '#4055c8', '#3f53c6', '#3e51c5', '#3d50c3', '#3c4ec2', '#3b4cc0'];\n    let fraction = (val - low) / (high - low);\n    return palette[Math.round((palette.length - 1) * fraction)];\n  }\n\n  render() {\n\n    let df = this.props.mainObj.state.spend_df;\n    let n_cohorts = df.data.length;\n    let plotly_data = [];\n\n    // find mean, min, max ending values\n    let lastvals = [];\n    for(let i=0; i<n_cohorts; i++) {\n      let spend = df.data[i];\n      lastvals.push(spend[spend.length - 1]);\n    }\n    let last_low = Math.min.apply(Math, lastvals)\n    let last_high = Math.max.apply(Math, lastvals)\n    let line_options = {};\n\n    for(let i=0; i<n_cohorts; i++) {\n      if (i===this.props.mainObj.state.highlight_index)\n        line_options = {'width': 2, 'color': 'black'};\n      else \n        line_options = {'width': 1, 'color': this.getcolor(df.data[i][df.data[i].length - 1], last_low, last_high)};\n\n      plotly_data.push({\n        x: df.columns,\n        y: df.data[i],\n        hovertemplate: '<b>Year</b> %{x} <b>Spend</b>: %{y:.4f} ',\n        // text = ['{}'.format(i + 1928) for i in range(len(spend_df))],        \n        name: df.index[i],\n        type: 'scatter',\n        mode: 'lines',\n        line: line_options\n      });\n    } \n\n    return (\n      <Plot\n        divId='spend_plot'\n        data={plotly_data}\n        layout={{width: 480,\n          height: 300, \n          showlegend: false,\n          title: false,\n          hovermode: 'closest',\n          yaxis: {title: 'Spending',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside',\n            range: [0, 20]\n            // rangemode: 'tozero'\n          },\n          xaxis: {title: 'Year',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside'},\n          margin: {\n            t: 5,\n            r: 10,\n            l: 40,\n            b: 40,\n            pad: 0\n          },\n          autocolorscale: false,\n          colorscale: 'Viridis',\n        }\n        }      \n        onClick = {(arg) => {\n          // var update = {\n          //   opacity: 1,\n          //   'line.width': 3,\n          // };\n          // // console.log(arg.points[0].curveNumber);\n          // Plotly.restyle('spend_plot', update, arg.points[0].curveNumber);\n          this.props.mainObj.setState({highlight_index: arg.points[0].curveNumber});\n\n        }}\n          />\n    );\n  }\n}\n\nexport default SwrPlotSpend;","// import { data } from 'jquery';\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n// import Plotly from 'plotly.js/dist/plotly'\n\nclass SwrPlotSpend extends Component {\n\n  getcolor(val, low, high) {\n    let palette = ['#b40426', '#b50927', '#b70d28', '#b8122a', '#ba162b', '#bb1b2c', '#bd1f2d', '#be242e', '#c0282f', '#c12b30', '#c32e31', '#c43032', '#c53334', '#c73635', '#c83836', '#ca3b37', '#cb3e38', '#cc403a', '#cd423b', '#cf453c', '#d0473d', '#d1493f', '#d24b40', '#d44e41', '#d55042', '#d65244', '#d75445', '#d85646', '#d95847', '#da5a49', '#dc5d4a', '#dd5f4b', '#de614d', '#df634e', '#e0654f', '#e16751', '#e26952', '#e36b54', '#e36c55', '#e46e56', '#e57058', '#e67259', '#e7745b', '#e8765c', '#e9785d', '#e97a5f', '#ea7b60', '#eb7d62', '#ec7f63', '#ec8165', '#ed8366', '#ee8468', '#ee8669', '#ef886b', '#f08a6c', '#f08b6e', '#f18d6f', '#f18f71', '#f29072', '#f29274', '#f39475', '#f39577', '#f39778', '#f4987a', '#f49a7b', '#f59c7d', '#f59d7e', '#f59f80', '#f5a081', '#f6a283', '#f6a385', '#f6a586', '#f7a688', '#f7a889', '#f7a98b', '#f7aa8c', '#f7ac8e', '#f7ad90', '#f7af91', '#f7b093', '#f7b194', '#f7b396', '#f7b497', '#f7b599', '#f7b79b', '#f7b89c', '#f7b99e', '#f7ba9f', '#f7bca1', '#f6bda2', '#f6bea4', '#f6bfa6', '#f5c0a7', '#f5c1a9', '#f5c2aa', '#f5c4ac', '#f4c5ad', '#f4c6af', '#f3c7b1', '#f3c8b2', '#f2c9b4', '#f2cab5', '#f2cbb7', '#f1ccb8', '#f1cdba', '#f0cdbb', '#efcebd', '#efcfbf', '#eed0c0', '#edd1c2', '#edd2c3', '#ecd3c5', '#ebd3c6', '#ead4c8', '#ead5c9', '#e9d5cb', '#e8d6cc', '#e7d7ce', '#e6d7cf', '#e5d8d1', '#e4d9d2', '#e3d9d3', '#e2dad5', '#e1dad6', '#e0dbd8', '#dfdbd9', '#dedcdb', '#dddcdc', '#dcdddd', '#dbdcde', '#dadce0', '#d9dce1', '#d8dce2', '#d7dce3', '#d6dce4', '#d5dbe5', '#d4dbe6', '#d3dbe7', '#d2dbe8', '#d1dae9', '#cfdaea', '#cedaeb', '#cdd9ec', '#ccd9ed', '#cbd8ee', '#cad8ef', '#c9d7f0', '#c7d7f0', '#c6d6f1', '#c5d6f2', '#c4d5f3', '#c3d5f4', '#c1d4f4', '#c0d4f5', '#bfd3f6', '#bed2f6', '#bcd2f7', '#bbd1f8', '#bad0f8', '#b9d0f9', '#b7cff9', '#b6cefa', '#b5cdfa', '#b3cdfb', '#b2ccfb', '#b1cbfc', '#afcafc', '#aec9fc', '#adc9fd', '#abc8fd', '#aac7fd', '#a9c6fd', '#a7c5fe', '#a6c4fe', '#a5c3fe', '#a3c2fe', '#a2c1ff', '#a1c0ff', '#9fbfff', '#9ebeff', '#9dbdff', '#9bbcff', '#9abbff', '#98b9ff', '#97b8ff', '#96b7ff', '#94b6ff', '#93b5fe', '#92b4fe', '#90b2fe', '#8fb1fe', '#8db0fe', '#8caffe', '#8badfd', '#89acfd', '#88abfd', '#86a9fc', '#85a8fc', '#84a7fc', '#82a6fb', '#81a4fb', '#80a3fa', '#7ea1fa', '#7da0f9', '#7b9ff9', '#7a9df8', '#799cf8', '#779af7', '#7699f6', '#7597f6', '#7396f5', '#7295f4', '#7093f3', '#6f92f3', '#6e90f2', '#6c8ff1', '#6b8df0', '#6a8bef', '#688aef', '#6788ee', '#6687ed', '#6485ec', '#6384eb', '#6282ea', '#6180e9', '#5f7fe8', '#5e7de7', '#5d7ce6', '#5b7ae5', '#5a78e4', '#5977e3', '#5875e1', '#5673e0', '#5572df', '#5470de', '#536edd', '#516ddb', '#506bda', '#4f69d9', '#4e68d8', '#4c66d6', '#4b64d5', '#4a63d3', '#4961d2', '#485fd1', '#465ecf', '#455cce', '#445acc', '#4358cb', '#4257c9', '#4055c8', '#3f53c6', '#3e51c5', '#3d50c3', '#3c4ec2', '#3b4cc0'];\n    let fraction = (val - low) / (high - low);\n    return palette[Math.round((palette.length - 1) * fraction)];\n  }\n\n  render() {\n\n    let df = this.props.mainObj.state.portval_df;\n    let n_cohorts = df.data.length;\n    let plotly_data = []\n\n    // find min and max ending values\n    let lastvals = [];\n    for(let i=0; i<n_cohorts; i++) {\n      lastvals.push(df.data[i][df.data[i].length - 1]);\n    }\n    let last_low = Math.min.apply(Math, lastvals)\n    let last_high = Math.max.apply(Math, lastvals)\n    let line_options =  {}\n    \n    for(var i=0; i<n_cohorts; i++) {\n      if (i===this.props.mainObj.state.highlight_index)\n        line_options = {'width': 2, 'color': 'black'};\n      else \n        line_options = {'width': 1, 'color': this.getcolor(df.data[i][df.data[i].length - 1], last_low, last_high)};\n\n      plotly_data.push({\n        x: df.columns,\n        y: df.data[i],\n        name: df.index[i],\n        type: 'scatter',\n        mode: 'lines',\n        color: df.data[i][df.data[i].length],\n        line: line_options,\n        hovertemplate: '<b>Year</b> %{x} <b>Value</b>: %{y:.4f} ',\n      });   \n    }\n    return (\n      <Plot\n      divId='portval_plot'\n      data={plotly_data}\n        layout={{width: 480,\n          height: 300, \n          showlegend: false,\n          title: false,\n          hovermode: 'closest',\n          yaxis: {title: 'Portfolio Value',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside',\n            range: [0,400]\n            // rangemode: 'tozero'\n          },\n          xaxis: {title: 'Year',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside'},\n          margin: {\n            t: 5,\n            r: 10,\n            l: 50,\n            b: 40,\n            pad: 0\n          }}          \n        }\n        onClick = {(arg) => {\n          // var update = {\n          //   opacity: 1,\n          //   'line.width': 4,\n          //   'line.color': 'black',\n          // };\n          // // console.log(arg.points[0].curveNumber);\n          // Plotly.restyle('portval_plot', update, arg.points[0].curveNumber);\n          this.props.mainObj.setState({highlight_index: arg.points[0].curveNumber});\n        }}\n\n      />\n    );\n  }\n}\n\nexport default SwrPlotSpend;","// import { data } from 'jquery';\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nclass SwrPlotProfile extends Component {\n\n  render() {\n\n    let df = this.props.mainObj.state.profile_df;\n    let plotly_data = [{\n      x: df.data[0],\n      y: df.data[1],\n      name: 'Spending',\n        type: 'scatter',\n        mode: 'lines',\n        line: {'width': 2}        \n    }]; \n\n    return (\n      <Plot\n        data={plotly_data}\n        layout={{width: 480,\n          height: 300, \n          showlegend: false,\n          title: false,\n          yaxis: {title: 'Spending',\n            linecolor: 'black',\n            rangemode: 'tozero',\n            mirror: true,\n            ticks: 'inside'},\n          xaxis: {title: 'Portfolio Value',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside'},\n          margin: {\n            t: 5,\n            r: 10,\n            l: 50,\n            b: 40,\n            pad: 0\n          }}\n        }\n      />\n    );\n  }\n}\n\nexport default SwrPlotProfile;","// import { data } from 'jquery';\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nclass SwrPlotSurvival extends Component {\n\n  render() {\n\n    let df = this.props.mainObj.state.survival_df;\n    let plotly_data = [{\n        x: df.data[1],\n        y: df.data[0],\n        type: 'bar',\n      }];\n\n    return (\n      <Plot\n        data={plotly_data}\n        layout={{width: 480,\n          height: 300, \n          showlegend: false,\n          title: false,\n          yaxis: {title: 'Count',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside'},\n          xaxis: {title: 'Years to Exhaustion',\n            linecolor: 'black',\n            mirror: true,\n            ticks: 'inside'},\n          margin: {\n            t: 5,\n            r: 10,\n            l: 50,\n            b: 40,\n            pad: 0\n          }}\n        }\n      />\n    );\n  }\n}\n\nexport default SwrPlotSurvival;","import React, { Component } from 'react';\nimport SwrPlotSpend from './SwrPlotSpend';\nimport SwrPlotPortval from './SwrPlotPortval';\nimport SwrPlotProfile from './SwrPlotProfile';\nimport SwrPlotSurvival from './SwrPlotSurvival';\n\nclass SwrPlots extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"swrplots-custom\">\n              <h5 className=\"plot-title\">Spending Path for Retirement Cohorts 1928-1991</h5>\n              <SwrPlotSpend mainObj={this.props.mainObj} />\n          </div>\n          <div className=\"swrplots-custom\">\n              <h5 className=\"plot-title\">Portfolio Path for Retirement Cohorts 1928-1991</h5>\n              <SwrPlotPortval mainObj={this.props.mainObj} />\n          </div>\n          <div className=\"swrplots-custom\">\n              <h5 className=\"plot-title\">Spending v. Portfolio Value</h5>\n              <SwrPlotProfile mainObj={this.props.mainObj} />\n          </div>\n          <div className=\"swrplots-custom\">\n              <h5 className=\"plot-title\">Exhaustion Frequency</h5>\n              <SwrPlotSurvival mainObj={this.props.mainObj} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SwrPlots;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRssSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTwitterSquare, faGithubSquare, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport '../css/SwrFooter.css';\n\nfunction SwrFooter(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto footer-custom\">\n                    &copy; Copyright 2021 <a className=\"footer-custom\" href=\"https://druce.ai/contact.html\">Druce Vertes</a>\n                    <br />\n                    <a href=\"https://druce.ai/feed.xml\" style={{color: \"#ee802f\"}} target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon icon={faRssSquare} />\n                    </a>\n                    &nbsp;\n                    <a href=\"https://twitter.com/streeteye/\" style={{color: \"#1DA1F2\"}} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faTwitterSquare} />\n                    </a>\n                    &nbsp;\n                    <a href=\"https://github.com/druce\" style={{color: \"#6e5494\"}} target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon icon={faGithubSquare} />\n                    </a>\n                    &nbsp;\n                    <a href=\"https://www.linkedin.com/in/drucevertes\" style={{color: \"#0e76a8\"}}target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faLinkedin} />\n                    </a>                \n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default SwrFooter;","export const REAL_RETURN_DF = {\"columns\":[1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],\n\"index\":[\"stocks\",\"bonds\"],\n\"data\":[[0.4548743225,-0.0829794661,-0.2306864604,-0.383290097,0.0184953267,0.581964662,-0.0451099117,0.4308749741,0.3059543036,-0.3765951046,0.3195852214,0.0020612705,-0.1131054153,-0.1701687239,0.0743879301,0.1801644808,0.1711355153,0.3280144508,-0.1558434501,-0.080334447,-0.0184313786,0.1946265655,0.2940146838,0.1466561924,0.1551799845,-0.0200788896,0.5208982,0.3296875347,0.0582561828,-0.1335268876,0.3990181073,0.1093525671,-0.0110532921,0.2529614211,-0.0989165236,0.2111055587,0.1494540757,0.1064532596,-0.1260595462,0.2046278642,0.0627500691,-0.1299397925,-0.0215150466,0.0951972059,0.1499248677,-0.1929387796,-0.3327779236,0.2551876788,0.1710361861,-0.1265837692,-0.0104215004,0.0653009283,0.1601600496,-0.1362862954,0.1346219973,0.1852946782,0.0176950378,0.2674135723,0.1628738603,0.0207222376,0.1197129455,0.2542110681,-0.0802900892,0.2494353443,0.0433364953,0.0681425776,-0.0124895361,0.3345132864,0.1918734652,0.3006317917,0.2637624018,0.1829697763,-0.1200334287,-0.1427256227,-0.2318436694,0.2550668534,0.0785523252,0.0139441839,0.1199952064,0.0255906361,-0.3889810689,0.263845943,0.1296836589,-0.0102607376,0.1354103518,0.3023733037,0.1171220393,0.0125876836,0.1038054203,0.1906917699,-0.065104269,0.282742008,0.1661454164],\n[0.0442268881,0.0301785624,0.0329910668,-0.0741055635,0.3778315419,0.1915387526,0.1482135791,0.104870742,0.1024587995,-0.078496759,0.1149682549,0.0940652763,0.0787254437,-0.0010353052,-0.0517710159,0.019583769,0.0484949827,0.0442543983,-0.0550177806,-0.1235017278,-0.0394883699,0.0641005325,0.0311991467,-0.0746438226,0.021137725,0.0079753395,0.0582842953,0.0233052987,-0.0381945559,-0.0392914565,0.0360261186,0.0055802326,0.0513040686,0.0398659473,0.0523381657,0.0417307817,0.0383379844,0.0157979699,-0.0627135522,-0.0182690709,0.0054985742,-0.0709973883,-0.0017828368,0.0930907883,0.0787899093,-0.0175151511,-0.1389901184,0.0174707627,0.132469896,0.0324218628,-0.0417479787,-0.1192184021,-0.1485248539,-0.0169694591,0.2159683108,0.1257779549,0.1085197386,0.1962130115,0.1922261055,-0.0132611754,0.1060489022,0.1045786537,0.0070409606,0.1306522029,0.0887463903,0.1309338501,-0.0382686026,0.168773185,0.0180839184,0.0928025368,0.0629545307,-0.0131607051,0.0575837332,0.0485574903,0.1042647074,0.1101194112,0.070233563,0.0147475329,0.0370300107,0.0028945885,-0.0857558918,0.2376956518,0.0659956683,0.0913916557,0.0789202504,-0.0248433985,0.0862280692,-0.0081518132,0.0899010841,0.0743540954,-0.0508109833,0.1274753892,0.0910230944]\n]}\n","export const SPEND_DF = {\"columns\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],\n\"index\":[1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,\"median\"],\n\"data\":[\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]\n]};\n","export const PORTVAL_DF = {\"columns\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\n\"index\":[1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,\"median\"],\n\"data\":[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,],\n]};\n","export const PROFILE_DF = {\"columns\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000],\"index\":[\"portval\",\"spend\"],\"data\":[[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4.0,4.1,4.2,4.3,4.4,4.5,4.6,4.7,4.8,4.9,5.0,5.1,5.2,5.3,5.4,5.5,5.6,5.7,5.8,5.9,6.0,6.1,6.2,6.3,6.4,6.5,6.6,6.7,6.8,6.9,7.0,7.1,7.2,7.3,7.4,7.5,7.6,7.7,7.8,7.9,8.0,8.1,8.2,8.3,8.4,8.5,8.6,8.7,8.8,8.9,9.0,9.1,9.2,9.3,9.4,9.5,9.6,9.7,9.8,9.9,10.0,10.1,10.2,10.3,10.4,10.5,10.6,10.7,10.8,10.9,11.0,11.1,11.2,11.3,11.4,11.5,11.6,11.7,11.8,11.9,12.0,12.1,12.2,12.3,12.4,12.5,12.6,12.7,12.8,12.9,13.0,13.1,13.2,13.3,13.4,13.5,13.6,13.7,13.8,13.9,14.0,14.1,14.2,14.3,14.4,14.5,14.6,14.7,14.8,14.9,15.0,15.1,15.2,15.3,15.4,15.5,15.6,15.7,15.8,15.9,16.0,16.1,16.2,16.3,16.4,16.5,16.6,16.7,16.8,16.9,17.0,17.1,17.2,17.3,17.4,17.5,17.6,17.7,17.8,17.9,18.0,18.1,18.2,18.3,18.4,18.5,18.6,18.7,18.8,18.9,19.0,19.1,19.2,19.3,19.4,19.5,19.6,19.7,19.8,19.9,20.0,20.1,20.2,20.3,20.4,20.5,20.6,20.7,20.8,20.9,21.0,21.1,21.2,21.3,21.4,21.5,21.6,21.7,21.8,21.9,22.0,22.1,22.2,22.3,22.4,22.5,22.6,22.7,22.8,22.9,23.0,23.1,23.2,23.3,23.4,23.5,23.6,23.7,23.8,23.9,24.0,24.1,24.2,24.3,24.4,24.5,24.6,24.7,24.8,24.9,25.0,25.1,25.2,25.3,25.4,25.5,25.6,25.7,25.8,25.9,26.0,26.1,26.2,26.3,26.4,26.5,26.6,26.7,26.8,26.9,27.0,27.1,27.2,27.3,27.4,27.5,27.6,27.7,27.8,27.9,28.0,28.1,28.2,28.3,28.4,28.5,28.6,28.7,28.8,28.9,29.0,29.1,29.2,29.3,29.4,29.5,29.6,29.7,29.8,29.9,30.0,30.1,30.2,30.3,30.4,30.5,30.6,30.7,30.8,30.9,31.0,31.1,31.2,31.3,31.4,31.5,31.6,31.7,31.8,31.9,32.0,32.1,32.2,32.3,32.4,32.5,32.6,32.7,32.8,32.9,33.0,33.1,33.2,33.3,33.4,33.5,33.6,33.7,33.8,33.9,34.0,34.1,34.2,34.3,34.4,34.5,34.6,34.7,34.8,34.9,35.0,35.1,35.2,35.3,35.4,35.5,35.6,35.7,35.8,35.9,36.0,36.1,36.2,36.3,36.4,36.5,36.6,36.7,36.8,36.9,37.0,37.1,37.2,37.3,37.4,37.5,37.6,37.7,37.8,37.9,38.0,38.1,38.2,38.3,38.4,38.5,38.6,38.7,38.8,38.9,39.0,39.1,39.2,39.3,39.4,39.5,39.6,39.7,39.8,39.9,40.0,40.1,40.2,40.3,40.4,40.5,40.6,40.7,40.8,40.9,41.0,41.1,41.2,41.3,41.4,41.5,41.6,41.7,41.8,41.9,42.0,42.1,42.2,42.3,42.4,42.5,42.6,42.7,42.8,42.9,43.0,43.1,43.2,43.3,43.4,43.5,43.6,43.7,43.8,43.9,44.0,44.1,44.2,44.3,44.4,44.5,44.6,44.7,44.8,44.9,45.0,45.1,45.2,45.3,45.4,45.5,45.6,45.7,45.8,45.9,46.0,46.1,46.2,46.3,46.4,46.5,46.6,46.7,46.8,46.9,47.0,47.1,47.2,47.3,47.4,47.5,47.6,47.7,47.8,47.9,48.0,48.1,48.2,48.3,48.4,48.5,48.6,48.7,48.8,48.9,49.0,49.1,49.2,49.3,49.4,49.5,49.6,49.7,49.8,49.9,50.0,50.1,50.2,50.3,50.4,50.5,50.6,50.7,50.8,50.9,51.0,51.1,51.2,51.3,51.4,51.5,51.6,51.7,51.8,51.9,52.0,52.1,52.2,52.3,52.4,52.5,52.6,52.7,52.8,52.9,53.0,53.1,53.2,53.3,53.4,53.5,53.6,53.7,53.8,53.9,54.0,54.1,54.2,54.3,54.4,54.5,54.6,54.7,54.8,54.9,55.0,55.1,55.2,55.3,55.4,55.5,55.6,55.7,55.8,55.9,56.0,56.1,56.2,56.3,56.4,56.5,56.6,56.7,56.8,56.9,57.0,57.1,57.2,57.3,57.4,57.5,57.6,57.7,57.8,57.9,58.0,58.1,58.2,58.3,58.4,58.5,58.6,58.7,58.8,58.9,59.0,59.1,59.2,59.3,59.4,59.5,59.6,59.7,59.8,59.9,60.0,60.1,60.2,60.3,60.4,60.5,60.6,60.7,60.8,60.9,61.0,61.1,61.2,61.3,61.4,61.5,61.6,61.7,61.8,61.9,62.0,62.1,62.2,62.3,62.4,62.5,62.6,62.7,62.8,62.9,63.0,63.1,63.2,63.3,63.4,63.5,63.6,63.7,63.8,63.9,64.0,64.1,64.2,64.3,64.4,64.5,64.6,64.7,64.8,64.9,65.0,65.1,65.2,65.3,65.4,65.5,65.6,65.7,65.8,65.9,66.0,66.1,66.2,66.3,66.4,66.5,66.6,66.7,66.8,66.9,67.0,67.1,67.2,67.3,67.4,67.5,67.6,67.7,67.8,67.9,68.0,68.1,68.2,68.3,68.4,68.5,68.6,68.7,68.8,68.9,69.0,69.1,69.2,69.3,69.4,69.5,69.6,69.7,69.8,69.9,70.0,70.1,70.2,70.3,70.4,70.5,70.6,70.7,70.8,70.9,71.0,71.1,71.2,71.3,71.4,71.5,71.6,71.7,71.8,71.9,72.0,72.1,72.2,72.3,72.4,72.5,72.6,72.7,72.8,72.9,73.0,73.1,73.2,73.3,73.4,73.5,73.6,73.7,73.8,73.9,74.0,74.1,74.2,74.3,74.4,74.5,74.6,74.7,74.8,74.9,75.0,75.1,75.2,75.3,75.4,75.5,75.6,75.7,75.8,75.9,76.0,76.1,76.2,76.3,76.4,76.5,76.6,76.7,76.8,76.9,77.0,77.1,77.2,77.3,77.4,77.5,77.6,77.7,77.8,77.9,78.0,78.1,78.2,78.3,78.4,78.5,78.6,78.7,78.8,78.9,79.0,79.1,79.2,79.3,79.4,79.5,79.6,79.7,79.8,79.9,80.0,80.1,80.2,80.3,80.4,80.5,80.6,80.7,80.8,80.9,81.0,81.1,81.2,81.3,81.4,81.5,81.6,81.7,81.8,81.9,82.0,82.1,82.2,82.3,82.4,82.5,82.6,82.7,82.8,82.9,83.0,83.1,83.2,83.3,83.4,83.5,83.6,83.7,83.8,83.9,84.0,84.1,84.2,84.3,84.4,84.5,84.6,84.7,84.8,84.9,85.0,85.1,85.2,85.3,85.4,85.5,85.6,85.7,85.8,85.9,86.0,86.1,86.2,86.3,86.4,86.5,86.6,86.7,86.8,86.9,87.0,87.1,87.2,87.3,87.4,87.5,87.6,87.7,87.8,87.9,88.0,88.1,88.2,88.3,88.4,88.5,88.6,88.7,88.8,88.9,89.0,89.1,89.2,89.3,89.4,89.5,89.6,89.7,89.8,89.9,90.0,90.1,90.2,90.3,90.4,90.5,90.6,90.7,90.8,90.9,91.0,91.1,91.2,91.3,91.4,91.5,91.6,91.7,91.8,91.9,92.0,92.1,92.2,92.3,92.4,92.5,92.6,92.7,92.8,92.9,93.0,93.1,93.2,93.3,93.4,93.5,93.6,93.7,93.8,93.9,94.0,94.1,94.2,94.3,94.4,94.5,94.6,94.7,94.8,94.9,95.0,95.1,95.2,95.3,95.4,95.5,95.6,95.7,95.8,95.9,96.0,96.1,96.2,96.3,96.4,96.5,96.6,96.7,96.8,96.9,97.0,97.1,97.2,97.3,97.4,97.5,97.6,97.7,97.8,97.9,98.0,98.1,98.2,98.3,98.4,98.5,98.6,98.7,98.8,98.9,99.0,99.1,99.2,99.3,99.4,99.5,99.6,99.7,99.8,99.9,100.0,100.1,100.2,100.3,100.4,100.5,100.6,100.7,100.8,100.9,101.0,101.1,101.2,101.3,101.4,101.5,101.6,101.7,101.8,101.9,102.0,102.1,102.2,102.3,102.4,102.5,102.6,102.7,102.8,102.9,103.0,103.1,103.2,103.3,103.4,103.5,103.6,103.7,103.8,103.9,104.0,104.1,104.2,104.3,104.4,104.5,104.6,104.7,104.8,104.9,105.0,105.1,105.2,105.3,105.4,105.5,105.6,105.7,105.8,105.9,106.0,106.1,106.2,106.3,106.4,106.5,106.6,106.7,106.8,106.9,107.0,107.1,107.2,107.3,107.4,107.5,107.6,107.7,107.8,107.9,108.0,108.1,108.2,108.3,108.4,108.5,108.6,108.7,108.8,108.9,109.0,109.1,109.2,109.3,109.4,109.5,109.6,109.7,109.8,109.9,110.0,110.1,110.2,110.3,110.4,110.5,110.6,110.7,110.8,110.9,111.0,111.1,111.2,111.3,111.4,111.5,111.6,111.7,111.8,111.9,112.0,112.1,112.2,112.3,112.4,112.5,112.6,112.7,112.8,112.9,113.0,113.1,113.2,113.3,113.4,113.5,113.6,113.7,113.8,113.9,114.0,114.1,114.2,114.3,114.4,114.5,114.6,114.7,114.8,114.9,115.0,115.1,115.2,115.3,115.4,115.5,115.6,115.7,115.8,115.9,116.0,116.1,116.2,116.3,116.4,116.5,116.6,116.7,116.8,116.9,117.0,117.1,117.2,117.3,117.4,117.5,117.6,117.7,117.8,117.9,118.0,118.1,118.2,118.3,118.4,118.5,118.6,118.7,118.8,118.9,119.0,119.1,119.2,119.3,119.4,119.5,119.6,119.7,119.8,119.9,120.0,120.1,120.2,120.3,120.4,120.5,120.6,120.7,120.8,120.9,121.0,121.1,121.2,121.3,121.4,121.5,121.6,121.7,121.8,121.9,122.0,122.1,122.2,122.3,122.4,122.5,122.6,122.7,122.8,122.9,123.0,123.1,123.2,123.3,123.4,123.5,123.6,123.7,123.8,123.9,124.0,124.1,124.2,124.3,124.4,124.5,124.6,124.7,124.8,124.9,125.0,125.1,125.2,125.3,125.4,125.5,125.6,125.7,125.8,125.9,126.0,126.1,126.2,126.3,126.4,126.5,126.6,126.7,126.8,126.9,127.0,127.1,127.2,127.3,127.4,127.5,127.6,127.7,127.8,127.9,128.0,128.1,128.2,128.3,128.4,128.5,128.6,128.7,128.8,128.9,129.0,129.1,129.2,129.3,129.4,129.5,129.6,129.7,129.8,129.9,130.0,130.1,130.2,130.3,130.4,130.5,130.6,130.7,130.8,130.9,131.0,131.1,131.2,131.3,131.4,131.5,131.6,131.7,131.8,131.9,132.0,132.1,132.2,132.3,132.4,132.5,132.6,132.7,132.8,132.9,133.0,133.1,133.2,133.3,133.4,133.5,133.6,133.7,133.8,133.9,134.0,134.1,134.2,134.3,134.4,134.5,134.6,134.7,134.8,134.9,135.0,135.1,135.2,135.3,135.4,135.5,135.6,135.7,135.8,135.9,136.0,136.1,136.2,136.3,136.4,136.5,136.6,136.7,136.8,136.9,137.0,137.1,137.2,137.3,137.4,137.5,137.6,137.7,137.8,137.9,138.0,138.1,138.2,138.3,138.4,138.5,138.6,138.7,138.8,138.9,139.0,139.1,139.2,139.3,139.4,139.5,139.6,139.7,139.8,139.9,140.0,140.1,140.2,140.3,140.4,140.5,140.6,140.7,140.8,140.9,141.0,141.1,141.2,141.3,141.4,141.5,141.6,141.7,141.8,141.9,142.0,142.1,142.2,142.3,142.4,142.5,142.6,142.7,142.8,142.9,143.0,143.1,143.2,143.3,143.4,143.5,143.6,143.7,143.8,143.9,144.0,144.1,144.2,144.3,144.4,144.5,144.6,144.7,144.8,144.9,145.0,145.1,145.2,145.3,145.4,145.5,145.6,145.7,145.8,145.9,146.0,146.1,146.2,146.3,146.4,146.5,146.6,146.7,146.8,146.9,147.0,147.1,147.2,147.3,147.4,147.5,147.6,147.7,147.8,147.9,148.0,148.1,148.2,148.3,148.4,148.5,148.6,148.7,148.8,148.9,149.0,149.1,149.2,149.3,149.4,149.5,149.6,149.7,149.8,149.9,150.0,150.1,150.2,150.3,150.4,150.5,150.6,150.7,150.8,150.9,151.0,151.1,151.2,151.3,151.4,151.5,151.6,151.7,151.8,151.9,152.0,152.1,152.2,152.3,152.4,152.5,152.6,152.7,152.8,152.9,153.0,153.1,153.2,153.3,153.4,153.5,153.6,153.7,153.8,153.9,154.0,154.1,154.2,154.3,154.4,154.5,154.6,154.7,154.8,154.9,155.0,155.1,155.2,155.3,155.4,155.5,155.6,155.7,155.8,155.9,156.0,156.1,156.2,156.3,156.4,156.5,156.6,156.7,156.8,156.9,157.0,157.1,157.2,157.3,157.4,157.5,157.6,157.7,157.8,157.9,158.0,158.1,158.2,158.3,158.4,158.5,158.6,158.7,158.8,158.9,159.0,159.1,159.2,159.3,159.4,159.5,159.6,159.7,159.8,159.9,160.0,160.1,160.2,160.3,160.4,160.5,160.6,160.7,160.8,160.9,161.0,161.1,161.2,161.3,161.4,161.5,161.6,161.7,161.8,161.9,162.0,162.1,162.2,162.3,162.4,162.5,162.6,162.7,162.8,162.9,163.0,163.1,163.2,163.3,163.4,163.5,163.6,163.7,163.8,163.9,164.0,164.1,164.2,164.3,164.4,164.5,164.6,164.7,164.8,164.9,165.0,165.1,165.2,165.3,165.4,165.5,165.6,165.7,165.8,165.9,166.0,166.1,166.2,166.3,166.4,166.5,166.6,166.7,166.8,166.9,167.0,167.1,167.2,167.3,167.4,167.5,167.6,167.7,167.8,167.9,168.0,168.1,168.2,168.3,168.4,168.5,168.6,168.7,168.8,168.9,169.0,169.1,169.2,169.3,169.4,169.5,169.6,169.7,169.8,169.9,170.0,170.1,170.2,170.3,170.4,170.5,170.6,170.7,170.8,170.9,171.0,171.1,171.2,171.3,171.4,171.5,171.6,171.7,171.8,171.9,172.0,172.1,172.2,172.3,172.4,172.5,172.6,172.7,172.8,172.9,173.0,173.1,173.2,173.3,173.4,173.5,173.6,173.7,173.8,173.9,174.0,174.1,174.2,174.3,174.4,174.5,174.6,174.7,174.8,174.9,175.0,175.1,175.2,175.3,175.4,175.5,175.6,175.7,175.8,175.9,176.0,176.1,176.2,176.3,176.4,176.5,176.6,176.7,176.8,176.9,177.0,177.1,177.2,177.3,177.4,177.5,177.6,177.7,177.8,177.9,178.0,178.1,178.2,178.3,178.4,178.5,178.6,178.7,178.8,178.9,179.0,179.1,179.2,179.3,179.4,179.5,179.6,179.7,179.8,179.9,180.0,180.1,180.2,180.3,180.4,180.5,180.6,180.7,180.8,180.9,181.0,181.1,181.2,181.3,181.4,181.5,181.6,181.7,181.8,181.9,182.0,182.1,182.2,182.3,182.4,182.5,182.6,182.7,182.8,182.9,183.0,183.1,183.2,183.3,183.4,183.5,183.6,183.7,183.8,183.9,184.0,184.1,184.2,184.3,184.4,184.5,184.6,184.7,184.8,184.9,185.0,185.1,185.2,185.3,185.4,185.5,185.6,185.7,185.8,185.9,186.0,186.1,186.2,186.3,186.4,186.5,186.6,186.7,186.8,186.9,187.0,187.1,187.2,187.3,187.4,187.5,187.6,187.7,187.8,187.9,188.0,188.1,188.2,188.3,188.4,188.5,188.6,188.7,188.8,188.9,189.0,189.1,189.2,189.3,189.4,189.5,189.6,189.7,189.8,189.9,190.0,190.1,190.2,190.3,190.4,190.5,190.6,190.7,190.8,190.9,191.0,191.1,191.2,191.3,191.4,191.5,191.6,191.7,191.8,191.9,192.0,192.1,192.2,192.3,192.4,192.5,192.6,192.7,192.8,192.9,193.0,193.1,193.2,193.3,193.4,193.5,193.6,193.7,193.8,193.9,194.0,194.1,194.2,194.3,194.4,194.5,194.6,194.7,194.8,194.9,195.0,195.1,195.2,195.3,195.4,195.5,195.6,195.7,195.8,195.9,196.0,196.1,196.2,196.3,196.4,196.5,196.6,196.7,196.8,196.9,197.0,197.1,197.2,197.3,197.4,197.5,197.6,197.7,197.8,197.9,198.0,198.1,198.2,198.3,198.4,198.5,198.6,198.7,198.8,198.9,199.0,199.1,199.2,199.3,199.4,199.5,199.6,199.7,199.8,199.9,200.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,]]}\n","export const SURVIVAL_DF = {\n    \"columns\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\n    \"index\":[\"survival_count\",\"survival_bins\"],\n    \"data\":[\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,63],\n        [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]\n    ]}\n","import React, { Component } from 'react';\nimport SwrHeader from './SwrHeader';\nimport SwrSliders from './SwrSliders';\nimport SwrDescription from './SwrDescription';\nimport SwrPlots from './SwrPlots';\nimport SwrFooter from './SwrFooter';\nimport { REAL_RETURN_DF } from '../js/real_return_df.js';\nimport { SPEND_DF } from '../js/spend_df.js';\nimport { PORTVAL_DF } from '../js/portval_df.js';\nimport { PROFILE_DF } from '../js/profile_df.js';\nimport { SURVIVAL_DF } from '../js/survival_df.js';\nimport ReactGA from 'react-ga';\n\n// sort arr1 per order in arr2\n// const dsu = (arr1, arr2) => {\n    // return arr1\n    //   .map((item, index) => [arr2[index], item])\n    //   .sort(([arg1], [arg2]) => arg2 - arg1)\n    //   .map(([, item]) => item); \n    // }\n    \nexport class SwrMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stock_alloc_pct: 50.0,\n            bond_alloc_pct: 50.0,\n            withdrawal_fixed_pct: 2.0,\n            withdrawal_variable_pct: 2.5,\n            withdrawal_floor_pct: 4.0,\n            start_spend: 4.5,\n            n_ret_years: 30,\n            mean_spend: 5.3,\n            worst_spend: 2.4,\n            pct_exhausted: 1.6,\n            highlighted_index: -1,\n            real_return_df: REAL_RETURN_DF,\n            spend_df: SPEND_DF,\n            portval_df: PORTVAL_DF,\n            profile_df: PROFILE_DF,\n            survival_df: SURVIVAL_DF,\n            risk_index: -1,\n            risk_label: \"(None)\"\n        };\n\n        this.handleStockChange = this.handleStockChange.bind(this);\n        this.handleBondChange = this.handleBondChange.bind(this);\n        this.handleFixedChange = this.handleFixedChange.bind(this);\n        this.handleVariableChange = this.handleVariableChange.bind(this);\n        this.handleFloorChange = this.handleFloorChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.calc_profile_df = this.calc_profile_df.bind(this);\n        this.recalc_cohort_data = this.recalc_cohort_data.bind(this);\n\n    }\n\n    componentDidMount() {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        this.do_recalc();\n    }\n\n\n    listmean(array) {\n        return array.reduce((a, b) => a + b) / array.length;\n    } \n\n    calc_profile_df() {\n        let portvals = [];\n        let spendvals = []\n        let withdrawal_variable = this.state.withdrawal_variable_pct / 100;\n        for (var i=0; i<=2000; i++) {\n            let portval = i/10;\n            let desired_spend = this.state.withdrawal_fixed_pct + (portval * withdrawal_variable);\n            let desired_spend2 = Math.max(desired_spend, this.state.withdrawal_floor_pct);\n            let spendval = Math.min(portval, desired_spend2);\n            portvals.push(portval);\n            spendvals.push(spendval);\n        }\n        // copy profile from state, update and return it\n        let new_df = Object.assign(this.state.profile_df);\n        new_df.data = [portvals, spendvals];\n        this.setState({profile_df: new_df});\n     }\n\n    recalc_cohort_data() {\n        let stocks = this.state.real_return_df.data[0];\n        let bonds = this.state.real_return_df.data[1];\n        let stock_alloc = this.state.stock_alloc_pct / 100;\n        let bond_alloc = this.state.bond_alloc_pct / 100;\n        let withdrawal_variable = this.state.withdrawal_variable_pct / 100\n        let n_ret_years = this.state.n_ret_years;\n        let n_cohorts = stocks.length - n_ret_years + 1;\n        let spendvaldata = []\n        let portvaldata = []\n        // should use n_cohorts to build correct number\n        let new_survival_df = {\n            \"columns\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],\n            \"index\":[\"survival_count\",\"survival_bins\"],\n            \"data\":[\n                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]\n            ]\n        }\n\n        let mean_spendvals = [];\n        let min_spendvals = [];\n        let n_exhausted = 0;\n\n        for (let cohort_start=0; cohort_start<n_cohorts; cohort_start++) {\n            let portval = 100.0;\n            let portvals = [];\n            let spendvals = [];\n\n            portvals.push(portval);\n            let exhausted = false;\n            // let verbose = cohort_start === 0 ? true : false\n            // log to console to compare with python notebook output\n            // if (verbose) console.log('start ');\n\n            for (let cohort_year=0; cohort_year<n_ret_years; cohort_year++) {\n                let current_year = cohort_start + cohort_year;\n\n                let real_return = stock_alloc * stocks[current_year] + bond_alloc * bonds[current_year];\n                portval *= ( 1 + real_return );\n                // let debugstr = 'before spend ' + portval;\n                let desired_spend = this.state.withdrawal_fixed_pct + portval * withdrawal_variable;\n                desired_spend = Math.max(desired_spend, this.state.withdrawal_floor_pct);\n                let spendval = Math.min(portval, desired_spend);\n                // debugstr += ' spend ' + spendval;\n\n                spendvals.push(spendval);\n                portval -= spendval;\n                portvals.push(portval);\n                // debugstr += ' end ' + portval;\n                // if (verbose) console.log(debugstr);\n\n                if (portval === 0) {\n                    if (!exhausted) {\n                        exhausted = true;\n                        n_exhausted++;\n                        new_survival_df.data[0][cohort_year]++;\n                    }\n                }\n            }\n            spendvaldata.push(spendvals);\n            mean_spendvals.push(this.listmean(spendvals));\n            min_spendvals.push(Math.min.apply(Math, spendvals));\n\n            portvaldata.push(portvals);\n            if (!exhausted) {\n                new_survival_df.data[0][n_ret_years]++;\n            }\n        }\n\n        let new_spend_df = Object.assign(this.state.spend_df);\n        new_spend_df.data = spendvaldata;\n\n        let new_portval_df = Object.assign(this.state.portval_df);\n        new_portval_df.data = portvaldata;\n\n        let mean_spend = this.listmean(mean_spendvals).toFixed(1);\n        let worst_spend = Math.min.apply(Math, min_spendvals).toFixed(1);\n        let pct_exhausted = (n_exhausted / n_cohorts * 100).toFixed(1);\n        let start_spend = Math.max(this.state.withdrawal_fixed_pct + this.state.withdrawal_variable_pct, this.state.withdrawal_floor_pct).toFixed(1);\n\n        this.setState({\n            spend_df: new_spend_df,\n            portval_df: new_portval_df,\n            survival_df: new_survival_df,\n            start_spend: start_spend,\n            mean_spend: mean_spend,\n            worst_spend: worst_spend,\n            pct_exhausted: pct_exhausted,\n        });\n        \n    }\n\n    do_recalc() {\n        this.calc_profile_df();\n        this.recalc_cohort_data();    \n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.do_recalc();\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n    }\n\n    handleStockChange(event) {\n        let targetval = parseFloat(event.target.value)\n        targetval = isNaN(targetval) ? 0 : targetval;\n        this.setState({stock_alloc_pct: targetval}, this.do_recalc);\n    }\n\n    handleBondChange(event) {\n        let targetval = parseFloat(event.target.value)\n        targetval = isNaN(targetval) ? 0 : targetval;\n        this.setState({bond_alloc_pct: targetval}, this.do_recalc);\n    }\n\n    handleFixedChange(event) {\n        let targetval = parseFloat(event.target.value)\n        targetval = isNaN(targetval) ? 0 : targetval;\n        this.setState({withdrawal_fixed_pct: targetval}, this.do_recalc);\n    }\n\n    handleVariableChange(event) {\n        let targetval = parseFloat(event.target.value)\n        targetval = isNaN(targetval) ? 0 : targetval;\n        this.setState({withdrawal_variable_pct: targetval}, this.do_recalc);\n    }\n\n    handleFloorChange(event) {\n        let targetval = parseFloat(event.target.value)\n        targetval = isNaN(targetval) ? 0 : targetval;\n        this.setState({withdrawal_floor_pct: targetval}, this.do_recalc);\n    }\n\n    render() {\n        return (\n            <div>\n                <SwrHeader />\n                <SwrSliders mainObj={this} />\n                <SwrDescription {...this.state} />\n                <SwrPlots mainObj={this} />\n                <SwrFooter />\n            </div>\n        );\n    }\n}\n\nexport default SwrMain;\n","import './css/App.css';\nimport React, {Component} from 'react';\nimport {SwrMain} from './components/SwrMain';\nimport ReactGA from 'react-ga';\n\n// if you fork this please don't use this Google tracking code on your own public site\nconst trackingId = \"G-E1305JTTCL\"; \nReactGA.initialize(trackingId, { testMode: process.env.NODE_ENV === 'test' });\n\n\nclass App extends Component {\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <SwrMain />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}